/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

// required for enabling led control
#include <dt-bindings/led/led.h>

// required for rgb configuration
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

// #define DEFAULT 0
// #define LOWER   1
// #define RAISE   2

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN
                            LED_COLOR_ID_RED
                            LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        // del/backspace functionality for layer keys

        red_lyr: raise_red_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "RAISE_RED_LAYER";
            bindings =
                <&r_red>,
                <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
        };
        ylw_lyr: lower_yellow_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "LOWER_YELLOW_LAYER";
            bindings =
                <&l_ylw>,
                <&kp>;
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
        };

        // caps shift toggle on dt
        cs: caps_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LSHFT>,
                <&kp CAPS>;
        };

        // different homerow mods durations for index vs secondary fingers (pinkies/ringlol)
        hms: homerow_mods_short {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hml: homerow_mods_long {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LONG";
            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };

        // // windows explorer shortcut        
        // f_e: f_e {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "F_E";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp F>,
        //         <&kp E>;
        //     mods = <(MOD_LGUI)>;
        //     keep-mods = <(MOD_LGUI)>;
        // };

        // // swap t and g on lctrl
        // t_g: t_g {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "T_G";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp T>,
        //         <&kp G>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };
        // g_t: g_t {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "G_T";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp G>,
        //         <&kp T>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };

        // // r to s, p to r, on lctrl
        // r_s: r_s {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "R_S";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp R>,
        //         <&kp S>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };
        // p_r: p_r {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "P_R";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp P>,
        //         <&kp R>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };

        // //dvb retrigger
        // d_v: d_v {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "D_V";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp D>,
        //         <&kp V>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };
        // v_b: v_b {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "V_B";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp V>,
        //         <&kp B>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };
        // b_d: b_d {
        //     compatible = "zmk,behavior-mod-morph";
        //     label = "B_D";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&kp B>,
        //         <&kp D>;
        //     mods = <(MOD_LCTL)>;
        //     keep-mods = <(MOD_LCTL)>;
        // };

        // semi to p on rctrl
        semi_p: semi_p {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMI_P";
            #binding-cells = <0>;
            bindings =
                <&kp SEMI>,
                <&kp P>;
            mods = <(MOD_RCTL)>;
            keep-mods = <(MOD_RCTL)>;
        };

        // nested mod morph on homerow mod
        // hm_c_tg: homerow_mods_lctrl_tg {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "HOMEROW_MOD_MORPH_LCTRL_TG";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <150>;
        //     quick-tap-ms = <0>;
        //     flavor = "tap-preferred";
        //     bindings =
        //         <&kp>,
        //         <&t_g>;
        // };
        // hm_c_rs: homerow_mods_lctrl_rs {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "HOMEROW_MOD_MORPH_LCTRL_RS";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <210>;
        //     quick-tap-ms = <0>;
        //     flavor = "tap-preferred";
        //     bindings =
        //         <&kp>,
        //         <&r_s>;
        // };

    };

    macros {
        // windows only
        screenshot: screenshot {
            label = "SCREENSHOT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT &kp LGUI>
                , <&macro_tap &kp S>
                , <&macro_release &kp LSHFT &kp LGUI>
                ;
        };

        //lol
        apex: oi_apex {
            label = "OI_APEX";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp O &kp I &kp SPACE &kp A  &kp P  &kp E  &kp X  &kp SPACE>
                , <&macro_release &kp LSHFT>
                ;
        };

        // degree symbol
        degree: degree {
            compatible = "zmk,behavior-macro";
            label = "DEGREE";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        

        // rgb colour layers
        //   0° red
        // 120° green
        // 240° blue
        r_red: raise_red {
            compatible = "zmk,behavior-macro";
            label = "RAISE_RED";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &mo 2>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(0,100,30)>
                , <&macro_pause_for_release>
                , <&macro_release &mo 2>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(195,100,30)>;
        };
        
        l_ylw: lower_yellow {
            compatible = "zmk,behavior-macro";
            label = "LOWER_YELLOW";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &mo 1>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(60,100,30)>
                , <&macro_pause_for_release>
                , <&macro_release &mo 1>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(195,100,30)>;
        };

        b_blu: bluetooth_blue {
            compatible = "zmk,behavior-macro";
            label = "BLUETOOTH_BLUE";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_press &mo 3>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(240,100,30)>
                , <&macro_pause_for_release>
                , <&macro_release &mo 3>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(195,100,30)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            
            //元, default layer

            label = "moto";
            bindings = <
&kp  ESC          &kp N1    &kp N2           &kp N3         &kp N4            &kp N5                                    &kp N6           &kp N7          &kp N8          &kp N9          &kp N0      &kp BSLH
&hml LALT GRAVE   &kp Q     &kp W            &kp E          &kp R             &kp T                                     &kp Y            &kp U           &kp I           &kp O           &kp P       &hms BSPC LBKT
&hml LCTRL EQUAL  &kp A     &hml LALT S      &hms LCTRL D   &hms LSHFT F      &kp G                                     &kp H            &hms RSHFT J    &hms RCTRL K    &hml LALT L     &kp SEMI    &kp SQT
&hml LSHFT MINUS  &kp Z     &kp X            &kp C          &kp V             &kp B            &key_repeat  &degree     &kp N            &kp M           &kp COMMA       &kp DOT         &kp FSLH    &kp RBKT
                            &b_blu           &kp LGUI       &kp LALT          &ylw_lyr 0 DEL   &kp SPACE    &kp RET     &red_lyr 0 BSPC  &kp LCTRL       &kp CLCK        &kp LA(LSHFT)   
                                                                                                                                                                         /* ime keyboard toggle */
  >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {

            label = "shita";
            bindings = <
&trans  &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                       &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans  &kp N6    &kp N7    &kp N8      &kp N9    &kp N0                       &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans    &kp ESC   &trans      &cs       &kp TAB                      &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans    &trans    &trans      &trans    &trans    &trans   &trans    &trans  &trans  &trans  &trans   &trans   &trans
                  &trans    &trans      &trans    &trans    &trans   &trans    &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            
            label = "ueyuey";
            bindings = <
&trans     &trans       &trans      &trans            &trans        &trans                       &trans       &trans    &trans    &trans     &trans     &trans
&trans     &trans       &trans      &trans            &trans        &trans                       &trans       &trans    &trans    &kp INS    &kp BSPC   &kp DEL
&trans     &trans       &trans      &kp C_VOL_DN      &kp C_VOL_UP  &kp C_MUTE                   &kp K_CMENU  &kp LEFT  &kp UP    &kp RIGHT  &kp PG_UP  &screenshot
&trans     &trans       &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &to 4       &trans   &trans  &kp PSCRN    &kp HOME  &kp DOWN  &kp END    &kp PG_DN  &trans
                        &trans       &trans           &trans        &trans      &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        
        bt_layer {
            // bluetooth controls and other PC controls
            label = "blutoosu";
            bindings = <
&trans  &trans          &trans          &trans          &trans        &trans                                                        &trans                             &trans            &trans           &trans           &trans           &trans 
&trans  &kp C_POWER     &kp K_POWER     &kp C_SLEEP     &kp K_SLEEP   &trans                                                        &rgb_ug RGB_COLOR_HSB(0,100,10)      &trans            &trans           &trans           &trans           &trans
&trans  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                                                  &rgb_ug RGB_TOG                    &rgb_ug RGB_SPI   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF
&trans  &out OUT_USB    &out OUT_BLE    &bt BT_PRV      &bt BT_NXT    &bt BT_CLR    &kp C_BRIGHTNESS_DEC    &kp C_BRIGHTNESS_INC    &rgb_ug RGB_COLOR_HSB(195,100,30)  &rgb_ug RGB_SPD   &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR
                        &trans          &trans          &trans        &trans        &trans                  &trans                  &trans                             &trans            &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        
        apex_layer {
            // WASD LAYER
            // layer: 4

            label = "apex";
            bindings = <
                                                                                                                            /* reset to default layer */
&kp N6      &kp N5      &kp N1  &kp N2    &kp N3     &kp N4                              &apex  &apex  &apex  &apex  &apex  &to 0
&kp ESC     &kp TAB     &kp Q   &kp W     &kp E      &kp R                               &apex  &apex  &apex  &apex  &apex  &apex 
&kp Y       &kp LSHIFT  &kp A   &kp S     &kp D      &kp F                               &apex  &apex  &apex  &apex  &apex  &apex
&kp T       &kp LCTRL   &kp Z   &kp X     &kp C      &kp V  &kp B           &screenshot  &apex  &apex  &apex  &apex  &apex  &apex
                        &kp F1  &kp G     &kp LALT   &kp X  &kp SPACE       &kp ENTER    &apex  &apex  &apex  &screenshot
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
