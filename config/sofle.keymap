/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        // del/backspace functionality for layer keys

        km: keypress_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KEYPRESS_LAYER";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
        };

        // caps shift toggle on dt
        cs: caps_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LSHFT>,
                <&kp CAPS>;
        };

        // different homerow mods durations for index vs secondary fingers (pinkies/ringlol)
        hms: homerow_mods_short {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hml: homerow_mods_long {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LONG";
            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };

        // windows explorer shortcut
        e_f_kp: e_f_keypress {
            compatible = "zmk,behavior-mod-morph";
            label = "E_F_KEYPRESS";
            bindings =
                <&kp F>,
                <&kp E>;

            #binding-cells = <0>;
            keep-mods = <(MOD_LGUI)>;
            mods = <(MOD_LGUI)>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            
            //å…ƒ, default layer

            label = "MOTO";
            bindings = <
&kp  ESC          &kp N1    &kp N2       &kp N3        &kp N4          &kp N5         &kp N6   &kp N7        &kp N8         &kp N9        &kp N0     &kp BSLH
&hml LALT GRAVE   &kp Q     &kp W        &e_f_kp       &kp P           &kp G          &kp J    &kp L         &kp U          &kp Y         &kp SEMI   &hms BSPC LBKT
&hml LCTRL EQUAL  &kp A     &hml LALT R  &hms LCTRL S  &hms LSHFT T    &kp D          &kp H    &hms RSHFT N  &hms RCTRL E   &hml LALT I   &kp O      &kp SQT
&hml LSHFT MINUS  &kp Z     &kp X        &kp C         &kp V           &kp B          &kp K    &kp M         &kp COMMA      &kp DOT       &kp FSLH   &kp RBKT
                  &kp HOME  &kp LGUI     &mo 3         &km 1 DEL       &kp SPACE      &kp RET  &km 2 BSPC    &kp LA(LSHFT)  &kp CAPSLOCK  &kp END
  >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {

            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
